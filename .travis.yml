# generated by Buildyard, do not edit.
notifications:
  email:
    on_success: never
language: cpp
# compiler: clang
before_install:
 - sudo apt-get update -qq
 - sudo apt-get install -qq autoconf || /bin/true
 - sudo apt-get install -qq automake || /bin/true
 - sudo apt-get install -qq bison || /bin/true
 - sudo apt-get install -qq cmake || /bin/true
 - sudo apt-get install -qq cppcheck || /bin/true
 - sudo apt-get install -qq doxygen || /bin/true
 - sudo apt-get install -qq flex || /bin/true
 - sudo apt-get install -qq freeglut3-dev || /bin/true
 - sudo apt-get install -qq git || /bin/true
 - sudo apt-get install -qq git-review || /bin/true
 - sudo apt-get install -qq git-svn || /bin/true
 - sudo apt-get install -qq lcov || /bin/true
 - sudo apt-get install -qq libass-dev || /bin/true
 - sudo apt-get install -qq libavahi-compat-libdnssd-dev || /bin/true
 - sudo apt-get install -qq libavcodec-dev || /bin/true
 - sudo apt-get install -qq libavdevice-dev || /bin/true
 - sudo apt-get install -qq libavformat-dev || /bin/true
 - sudo apt-get install -qq libavutil-dev || /bin/true
 - sudo apt-get install -qq libboost-date-time-dev || /bin/true
 - sudo apt-get install -qq libboost-filesystem-dev || /bin/true
 - sudo apt-get install -qq libboost-program-options-dev || /bin/true
 - sudo apt-get install -qq libboost-regex-dev || /bin/true
 - sudo apt-get install -qq libboost-serialization-dev || /bin/true
 - sudo apt-get install -qq libboost-system-dev || /bin/true
 - sudo apt-get install -qq libboost-test-dev || /bin/true
 - sudo apt-get install -qq libfcgi-dev || /bin/true
 - sudo apt-get install -qq libgl1-mesa-dev || /bin/true
 - sudo apt-get install -qq libglewmx1.6-dev || /bin/true
 - sudo apt-get install -qq libhwloc-dev || /bin/true
 - sudo apt-get install -qq libibverbs-dev || /bin/true
 - sudo apt-get install -qq libjpeg-turbo8-dev || /bin/true
 - sudo apt-get install -qq liblircclient-dev || /bin/true
 - sudo apt-get install -qq libogre-dev || /bin/true
 - sudo apt-get install -qq libopenal-dev || /bin/true
 - sudo apt-get install -qq libopencv-dev || /bin/true
 - sudo apt-get install -qq libopenmpi-dev || /bin/true
 - sudo apt-get install -qq libopenscenegraph-dev || /bin/true
 - sudo apt-get install -qq libpoppler-dev || /bin/true
 - sudo apt-get install -qq libqt4-dev || /bin/true
 - sudo apt-get install -qq librdmacm-dev || /bin/true
 - sudo apt-get install -qq libspnav-dev || /bin/true
 - sudo apt-get install -qq libswscale-dev || /bin/true
 - sudo apt-get install -qq libturbojpeg || /bin/true
 - sudo apt-get install -qq libudt-dev || /bin/true
 - sudo apt-get install -qq libvncserver-dev || /bin/true
 - sudo apt-get install -qq libx11-dev || /bin/true
 - sudo apt-get install -qq libxmu-dev || /bin/true
 - sudo apt-get install -qq ninja-build || /bin/true
 - sudo apt-get install -qq openmpi-bin || /bin/true
 - sudo apt-get install -qq pkg-config || /bin/true
 - sudo apt-get install -qq subversion || /bin/true
script:
 - git clone --depth 10 https://github.com/Eyescale/Buildyard.git
 - cd Buildyard
 - mkdir config.travis
 - cp ../*.* config.travis
 - env TRAVIS=1 make -j2 debug
 - env TRAVIS=1 make tests ARGS=-V -C Debug
